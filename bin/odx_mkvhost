#!/bin/bash

# The MIT License (MIT)
#
# Copyright (c) 2014 root
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the Software), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED AS IS, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

set -x

function makeA2VhostMacro { # $PATH
  _PATH=$1;
  cat <<EOF > $_PATH
<Macro ODVHostConfigPHP \$vhosts_root \$domain>
  AddType text/html php
  php_admin_flag log_errors On
  php_admin_flag display_errors Off
  php_admin_flag register_globals Off
  php_admin_value error_log "\$vhosts_root/\$domain/logs/php.error.log"
  php_admin_value open_basedir "\$vhosts_root/\$domain/"
  php_admin_value doc_root "\$vhosts_root/\$domain/"
</Macro>

<Macro ODVHostDenyDir>
  Options None
  AllowOverride None
  Order deny,allow
  Deny from all
</Macro>

<Macro ODVHostAllowDir>
  AllowOverride All
  Order allow,deny
  allow from all
</Macro>

<Macro ODVHostInDir \$domain \$port \$vhosts_root>
  <VirtualHost *:\$port>
    ServerName \$domain
    ServerAlias www.\$domain
    DocumentRoot \$vhosts_root/\$domain/www

    LogLevel warn
    ErrorLog \$vhosts_root/\$domain/logs/apache.error.log
    CustomLog \$vhosts_root/\$domain/logs/apache.access.log combined

    <Directory />
      Use ODVHostDenyDir
    </Directory>

    <Directory \$vhosts_root/>
      Use ODVHostDenyDir
    </Directory>

    <Directory \$vhosts_root/\$domain>
      Options -Indexes -FollowSymLinks +MultiViews
      Use ODVHostAllowDir
    </Directory>

    Use ODVHostConfigPHP \$vhosts_root \$domain
  </VirtualHost>
</Macro>

<Macro ODVHost \$domain \$port>
        Use ODVHostInDir \$domain \$port /var/www
</Macro>
EOF
}

function makeA2VhostConf { # $_PATH, $DOMAIN, $PORT
  _PATH=$1; DOMAIN=$2; PORT=$3;
  if [[ ! -e $_PATH ]]; then
    cat <<EOF > $_PATH
Use ODVHost $DOMAIN $PORT
EOF
  fi
}

function makeNGVhostConf { # $_PATH, $DOMAIN, $PORT, $A2_PORT
  _PATH=$1; DOMAIN=$2; PORT=$3; A2_PORT=$4; VHOST_PATH=/var/www
  if [[ ! -e $_PATH ]]; then
  cat <<EOF > $_PATH
server {
  listen $PORT;
  server_name $DOMAIN www.$DOMAIN;
  access_log $VHOST_PATH/$DOMAIN/logs/n.access.log;

  location ~* \.(jpg|jpeg|gif|png|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|tar|wav|bmp|rtf|swf|ico|flv|txt|xml|docx|xlsx)\$ {
    root $VHOST_PATH/$DOMAIN/www/;
    index index.html index.php;
    access_log off;
    expires 30d;
  }

  location ~ /\.ht {
    deny all;
  }
EOF

  if [ "$A2_PORT" ]; then
    cat <<EOF >> $_PATH  
  location / {
    proxy_pass http://127.0.0.1:$A2_PORT/;
    proxy_set_header X-Real-IP \$remote_addr;
    proxy_set_header X-Forwarded-for \$remote_addr;
    proxy_set_header Host \$host;
    proxy_connect_timeout 60;
    proxy_send_timeout 90;
    proxy_read_timeout 90;
    proxy_redirect off;
    proxy_set_header Connection close;
    proxy_pass_header Content-Type;
    proxy_pass_header Content-Disposition;
    proxy_pass_header Content-Length;
  }
}
EOF
  else 
    cat <<EOF >> $_PATH  
}
EOF
  fi
  fi
}

function setupA2Macro {
  MACRO_PATH=/etc/apache2/conf.d/vhost.macro
  if [[ ! -e $MACRO_PATH ]]; then
    makeA2VhostMacro $MACRO_PATH
  fi

  apt-get install libapache2-mod-macro
  a2enmod macro
}

function setupConfs {
    setupA2Macro
}

function makeVhostHome { # $DOMAIN
  DOMAIN=$1; VHOST_PATH=/var/www; 

  mkdir -p $VHOST_PATH/$DOMAIN
  mkdir -p $VHOST_PATH/$DOMAIN/logs
  mkdir -p $VHOST_PATH/$DOMAIN/www
  mkdir -p $VHOST_PATH/$DOMAIN/code

  if [[ ! -e $VHOST_PATH/$DOMAIN/www/index.html ]]; then
    cat <<EOF > $VHOST_PATH/$DOMAIN/www/index.html
<!doctype html>
<html>
<head>
  <title>$DOMAIN</title>
</head>
<body>
    <h1>Hello, $DOMAIN!</h1>
</body>
</html>
EOF
  fi
}

function enableA2Vhost { # $CONF
  CONF=$1;
  a2ensite $CONF
}

function enableNGVhost { # $NG_VHOST_CONF_PATH, $NG_ENABLED_CONF_PATH
  NG_VHOST_CONF_PATH=$1; NG_ENABLED_CONF_PATH=$2;
  if [[ ! -e $NG_ENABLED_CONF_PATH ]]; then
    ln -s $NG_VHOST_CONF_PATH $NG_ENABLED_CONF_PATH
    echo "To activate the new configuration, you need to run:"
    echo "sudo service nginx reload"
  fi
}

function makeVhost {  # $DOMAIN, $MODE
  DOMAIN=$1; MODE=$2; PRIMARY_PORT=80

  makeVhostHome $DOMAIN

  if [ ! "$MODE" ]; then MODE="a+n"; fi
  
  if [ "$MODE" == "n" ] || [ "$MODE" == "a+n" ]; then
    NG_VHOST_CONF_PATH=/etc/nginx/sites-available
    NG_ENABLED_CONF_PATH=/etc/nginx/sites-enabled
    if [ "$MODE" == "a+n" ] ; then EXTRA_PORT=81; fi
    makeNGVhostConf $NG_VHOST_CONF_PATH/$DOMAIN.conf $DOMAIN $PRIMARY_PORT $EXTRA_PORT
    enableNGVhost $NG_VHOST_CONF_PATH/$DOMAIN.conf $NG_ENABLED_CONF_PATH/$DOMAIN.conf
  fi

  if [ "$MODE" == "a" ] || [ "$MODE" == "a+n" ]; then
    A2_VHOST_CONF_PATH=/etc/apache2/sites-available
    if [ "$MODE" != "a+n" ]; then EXTRA_PORT=$PRIMARY_PORT; fi
    makeA2VhostConf $A2_VHOST_CONF_PATH/$DOMAIN.conf $DOMAIN $EXTRA_PORT
    enableA2Vhost $DOMAIN.conf
  fi
}


## Main
if [ ! "$1" ]; then
  echo "Usage : `basename $0` [setup | test | <domain> <a|n|a+n>]"
else
  case $1 in
    setup)  echo "Setup vhosts templates..."
            setupConfs
    ;;

    test)   echo "Test. OK"
    ;;

    *)      echo "Configure vhost:$1..."
            makeVhost $1 $2
    ;;
  esac
fi
